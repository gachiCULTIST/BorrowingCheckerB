2	break
3	except
5	for
5	while
14	try
16	assert
17	continue
19	finally
26	raise
29	case
30	class
32	else
34	if
34  elif
39	return
44	with
50	yield
102	+
103	-
104	*
105	/
105 //
106	%
109	~
110	&
111	|
112	^
113	>>
115	<<
116	==
117	!=
118	>
119	<
120	>=
121	<=
122 or
123	and
124 not
126	:
127	&=
128	|=
129	^=
130	>>=
132	<<=
133	+=
134	-=
135	*=
136	/=
136 //=
137	%=
138	=
139	[
140	]
141	{
142	}
143	(
144	)
145	,
146	.
147	;
148	\
158	*ident*
159	*literal*
300 False
300 True
301 None
302 as
303 async
304 await
305 def
306 del
307 match
308 from
309 global
310 import
311 in
312 is
313 lambda
314 nonlocal
315 pass
316 _
317 type
318 @
319 @=
320 '
321 "
322 #
323 \
324 **
325 **=
326 :=
327	->